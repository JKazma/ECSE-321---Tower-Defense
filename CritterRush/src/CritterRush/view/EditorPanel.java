package CritterRush.view;


import java.awt.BasicStroke;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.image.BufferedImage;
import java.io.File;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.SwingUtilities;

import CritterRush.model.Mouse;
import CritterRush.model.tools.EditorTools;
import CritterRush.controller.ICManager;
import CritterRush.controller.MapManager;



public class EditorPanel extends javax.swing.JPanel implements MouseListener, MouseMotionListener{

	private static final long serialVersionUID = 1L;
	private TowerDefenseGame TDG;

    /**
     * Creates new form EditorPanel
     */
    public EditorPanel(TowerDefenseGame frame, boolean visibility) {
        initComponents();
        
        this.TDG = frame;
        
        setBackground(new java.awt.Color(255, 204, 153));
		setDoubleBuffered(true);
		setVisible(visibility);
		this.setFocusable(true);
		this.requestFocus(true);
		
		addMouseListener(this);
		addMouseMotionListener(this);
    }
    
     @Override
    public void paintComponent(Graphics g) {
    	super.paintComponent(g);
    	
    	Graphics2D g2 = (Graphics2D) g;
		g2.setStroke(new BasicStroke(ICManager.squareHighlightTickness));
		
        MapManager.getEditorMap().draw(g);
        EditorTools.draw(g);
    }
    
    /**
     * Take a screenshot of the map to be used as an icon.
     */
    public void mapScreenShot(){
		
    	BufferedImage buffImage = new BufferedImage(ICManager.fieldSizeX,
    			ICManager.fieldSizeY, BufferedImage.TYPE_INT_RGB);
		
    	this.paint(buffImage.createGraphics());
    	
		File imageFile = new File("resources/map/map" +  String.valueOf(MapManager.getMapCount()) + ".png");

		BufferedImage resized = new BufferedImage(195, 150, buffImage.TYPE_INT_RGB);

		// Paint scaled version of image to new image

		Graphics2D graphics2D = resized.createGraphics();
		graphics2D.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
				RenderingHints.VALUE_INTERPOLATION_BILINEAR);
		graphics2D.drawImage(buffImage, 0, 0, 195, 150, null);

		// clean up
		graphics2D.dispose();
		ICManager.maps[MapManager.getMapCount() - 1] = new ImageIcon(resized);

		try {
			imageFile.createNewFile();
			ImageIO.write(resized, "png", imageFile);
		} catch (Exception ex) {
		}
    }
    
    @Override
	public void mouseDragged(MouseEvent e) {
		Mouse.move(e.getX(), e.getY());
		EditorTools.update();
		
		if (SwingUtilities.isLeftMouseButton(e)) 
			EditorTools.performAction1();
		else if (SwingUtilities.isRightMouseButton(e)) 
			EditorTools.performAction2();
		
		repaint();
		
	}

	@Override
	public void mouseMoved(MouseEvent e) {
		Mouse.move(e.getX(), e.getY());
		EditorTools.update();
		repaint();
	}
	
	@Override
	public void mousePressed(MouseEvent e) {
		if (SwingUtilities.isLeftMouseButton(e)) 
			EditorTools.performAction1();
		else if (SwingUtilities.isRightMouseButton(e)) 
			EditorTools.performAction2();
		
		repaint();
	}

	@Override
	public void mouseClicked(MouseEvent e) {
		// TODO Auto-generated method stub	
	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
    
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        textureTool = new javax.swing.JRadioButton();
        spawnTool = new javax.swing.JRadioButton();
        done = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        editorToolsTitle = new javax.swing.JTextField();
        obstacleTool = new javax.swing.JRadioButton();
        leftClickLabel = new javax.swing.JLabel();
        rightClickLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 153));
        setForeground(new java.awt.Color(255, 204, 153));
        setMaximumSize(new java.awt.Dimension(960, 600));
        setPreferredSize(new java.awt.Dimension(960, 600));

        buttonGroup1.add(textureTool);
        textureTool.setSelected(true);
        textureTool.setText("Texture Tool");
        textureTool.setContentAreaFilled(false);
        textureTool.setFocusable(false);
        textureTool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textureToolActionPerformed(evt);
            }
        });

        buttonGroup1.add(spawnTool);
        spawnTool.setText("Spawn Tool");
        spawnTool.setContentAreaFilled(false);
        spawnTool.setFocusable(false);
        spawnTool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spawnToolActionPerformed(evt);
            }
        });

        done.setText("Done");
        done.setMaximumSize(new java.awt.Dimension(60, 25));
        done.setMinimumSize(new java.awt.Dimension(60, 25));
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneActionPerformed(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.setMaximumSize(new java.awt.Dimension(60, 25));
        cancel.setMinimumSize(new java.awt.Dimension(60, 25));
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        editorToolsTitle.setFont(new java.awt.Font("Helvetica", 0, 24)); // NOI18N
        editorToolsTitle.setText("Editor Tools");
        editorToolsTitle.setBorder(null);
        editorToolsTitle.setCaretColor(new java.awt.Color(204, 51, 0));
        editorToolsTitle.setFocusable(false);
        editorToolsTitle.setOpaque(false);
        editorToolsTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editorToolsTitleActionPerformed(evt);
            }
        });

        buttonGroup1.add(obstacleTool);
        obstacleTool.setText("Obstacle Tool");
        obstacleTool.setContentAreaFilled(false);
        obstacleTool.setFocusable(false);
        obstacleTool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obstacleToolActionPerformed(evt);
            }
        });

        leftClickLabel.setText("Left click: path");

        rightClickLabel.setText("Right click: scenery");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Actions");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(804, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(leftClickLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editorToolsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rightClickLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cancel, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                            .addComponent(done, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spawnTool, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textureTool, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(obstacleTool, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(editorToolsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(textureTool)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spawnTool)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(obstacleTool)
                .addGap(27, 27, 27)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(leftClickLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rightClickLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                .addComponent(done, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void spawnToolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spawnToolActionPerformed
        EditorTools.setCurrentTool(EditorTools.getSpawnTool());
        leftClickLabel.setText("Left Click: entry");
        rightClickLabel.setText("Right Click: exit");
    }//GEN-LAST:event_spawnToolActionPerformed
    
    private void textureToolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textureToolActionPerformed
        EditorTools.setCurrentTool(EditorTools.getTextureTool());
        leftClickLabel.setText("Left Click: path");
        rightClickLabel.setText("Right Click: scenery");
    }//GEN-LAST:event_textureToolActionPerformed
    
    private void obstacleToolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obstacleToolActionPerformed
    	EditorTools.setCurrentTool(EditorTools.getObstacleTool());
    	leftClickLabel.setText("Left Click: obstacle");
        rightClickLabel.setText("");
    }//GEN-LAST:event_obstacleToolActionPerformed

    private void editorToolsTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editorToolsTitleActionPerformed
        //Nothing to do here
    }//GEN-LAST:event_editorToolsTitleActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
    	MapManager.setSelectedMap(null);
    	MapManager.resetEditorMap();
        TDG.panelSwap(TowerDefenseGame.editorPanel, TowerDefenseGame.mapSelectionPanel);
        textureTool.setSelected(true);
        EditorTools.setCurrentTool(null);
        
    }//GEN-LAST:event_cancelActionPerformed

    private void doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneActionPerformed
    	
    	if(MapManager.getEditorMap().checkValidity() == true){
    		MapManager.addMap(MapManager.getEditorMap());
    		mapScreenShot();
        	MapManager.setSelectedMap(null);
        	MapManager.resetEditorMap();
        	TowerDefenseGame.mapSelectionPanel.updateMapIcons();
        	TDG.panelSwap(TowerDefenseGame.editorPanel, TowerDefenseGame.mapSelectionPanel);
        	textureTool.setSelected(true);
        	EditorTools.setCurrentTool(null);
    	}
    	else {
    		TDG.printMessage("Current map setup is invalid.");
    	}
    	
    }//GEN-LAST:event_doneActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancel;
    private javax.swing.JButton done;
    private javax.swing.JTextField editorToolsTitle;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel leftClickLabel;
    private javax.swing.JRadioButton obstacleTool;
    private javax.swing.JLabel rightClickLabel;
    private javax.swing.JRadioButton spawnTool;
    private javax.swing.JRadioButton textureTool;
    // End of variables declaration//GEN-END:variables


}
